import React from 'react';

export const EditIcon = () => {
    return (<path d="M2.46482166,19.7078741 C2.10323958,19.3454088 1.96669686,18.8354491 2.09961846,18.3409455 L3.58860534,12.7828795 L14.9060185,1.46555475 C15.5799001,0.791673147 16.6782476,0.791673147 17.3539839,1.46643795 L20.7072293,4.81968339 C21.3820825,5.49541971 21.3820825,6.59279571 20.7072293,7.26764883 L9.39087606,18.5850619 L3.83183862,20.0741371 C3.33821814,20.2061755 2.82640374,20.0695445 2.46490998,19.7079624 L2.46482166,19.7078741 Z M4.62504054,14.6043912 L3.54762486,18.6261307 L7.56936438,17.5477435 L4.62504054,14.6043912 Z M13.0035173,5.44984659 L5.2788735,13.1754619 L8.99820534,16.895677 L16.7228492,9.16926675 L13.0035173,5.44984659 Z M15.946958,2.50737747 L14.0454284,4.40890707 L17.7647602,8.12823891 L19.667173,6.22670931 C19.7675823,6.12519333 19.7671878,5.96165322 19.6662898,5.86062291 L16.3121612,2.50737747 C16.2637886,2.45884249 16.1980837,2.43156213 16.1295596,2.43156213 C16.0610355,2.43156213 15.9953306,2.45884249 15.946958,2.50737747 Z M21.2134796,21.5670984 C21.6197516,21.5670984 21.950245,21.896797 21.950245,22.3038639 C21.950245,22.7100475 21.6196633,23.0397461 21.2134796,23.0397461 L3.10125558,23.0397461 C2.69493412,23.0395511 2.36546166,22.7101853 2.36546166,22.3038639 C2.36546166,21.8967087 2.6950719,21.5670984 3.10125558,21.5670984 L21.2134796,21.5670984 L21.2134796,21.5670984 Z" id="edit"></path>)
}

export const SettingsIcon = () => {
    return(<path id="settings" d="M8.479 12a3.527 3.527 0 0 1 3.523-3.523A3.527 3.527 0 0 1 15.525 12a3.526 3.526 0 0 1-3.523 3.523A3.527 3.527 0 0 1 8.479 12zm-1.334 0a4.863 4.863 0 0 0 4.857 4.857A4.862 4.862 0 0 0 16.859 12a4.861 4.861 0 0 0-4.857-4.857A4.862 4.862 0 0 0 7.145 12zm10.067 5.18a3.198 3.198 0 0 0-.654 3.544c-.499.26-1.019.48-1.556.65a3.193 3.193 0 0 0-2.97-2.05 3.185 3.185 0 0 0-2.976 2.068 9.67 9.67 0 0 1-1.56-.642 3.187 3.187 0 0 0-.644-3.57 3.19 3.19 0 0 0-3.581-.638 9.648 9.648 0 0 1-.65-1.56 3.177 3.177 0 0 0 0-5.967c.171-.536.388-1.058.65-1.559a3.184 3.184 0 0 0 3.581-.636 3.184 3.184 0 0 0 .642-3.57 9.66 9.66 0 0 1 1.562-.642 3.185 3.185 0 0 0 2.976 2.066 3.191 3.191 0 0 0 2.97-2.049c.537.172 1.057.39 1.556.652a3.197 3.197 0 0 0 .653 3.543 3.2 3.2 0 0 0 3.533.658c.26.502.474 1.022.644 1.558A3.2 3.2 0 0 0 19.357 12c0 1.326.834 2.494 2.031 2.962a9.758 9.758 0 0 1-.644 1.558 3.2 3.2 0 0 0-3.532.66zm5.09-7.013l.732-.1-.175-.718a11.123 11.123 0 0 0-1.294-3.131l-.385-.635-.59.45a1.863 1.863 0 0 1-2.435-.156 1.86 1.86 0 0 1-.151-2.441l.451-.589-.632-.386a11.108 11.108 0 0 0-3.135-1.31L13.96.972l-.094.743a1.858 1.858 0 0 1-1.834 1.626 1.854 1.854 0 0 1-1.834-1.638l-.09-.743-.728.175a11.057 11.057 0 0 0-3.156 1.299l-.647.391.468.592c.585.74.527 1.798-.136 2.46a1.853 1.853 0 0 1-2.465.13l-.59-.47-.394.644a11.14 11.14 0 0 0-1.314 3.162l-.18.737.753.083A1.852 1.852 0 0 1 3.374 12c0 .941-.711 1.731-1.655 1.837l-.753.083.18.736a11.094 11.094 0 0 0 1.314 3.16l.394.647.59-.47a1.853 1.853 0 0 1 2.465.13c.663.661.721 1.718.137 2.458l-.468.592.646.393a11.113 11.113 0 0 0 3.156 1.299l.728.175.09-.743c.113-.935.9-1.64 1.834-1.64.927 0 1.716.7 1.834 1.627l.094.744.728-.18a11.131 11.131 0 0 0 3.135-1.31l.632-.387-.451-.587a1.86 1.86 0 0 1 .15-2.441c.652-.65 1.697-.72 2.437-.157l.59.45.384-.636a11.096 11.096 0 0 0 1.294-3.13l.175-.72-.734-.098A1.863 1.863 0 0 1 20.69 12c0-.92.693-1.708 1.611-1.833z"/>)
}

export const DownloadIcon = () => {
    return (<path d="M12 16.587a.694.694 0 0 1-.494-.205L6.694 11.57l.988-.988L11.3 14.2V2.963h1.398V14.2l3.62-3.619.987.988-4.811 4.812a.694.694 0 0 1-.494.205zm9.641-6.725h1.399v9.548a1.63 1.63 0 0 1-1.628 1.627H2.588c-.898 0-1.628-.73-1.628-1.627V9.862H2.36v9.548c0 .126.102.229.229.229h18.824a.23.23 0 0 0 .23-.23V9.863z" id="download"></path>)
}

export const MaximizeIcon = () => {
    return (<path d="M22.5876834,1.46130432 C22.8657613,1.74127872 23.03912,2.12723712 23.04,2.55205632 L23.03912,6.79583232 L21.7191301,6.79583232 L21.72001,3.57921792 L14.2770267,11.0493235 C13.9091895,11.4185011 13.311674,11.4185011 12.9438368,11.0484403 C12.5759996,10.6801459 12.5759996,10.0813363 12.9438368,9.71215872 L20.2961809,2.33213952 L17.2716439,2.33213952 L17.2716439,1.00733952 L21.4991317,1.00733952 C21.9241685,1.00733952 22.3087256,1.18221312 22.5876834,1.46130432 Z M9.72297333,12.9506765 C10.0908105,12.5814989 10.688326,12.5814989 11.0561632,12.9515597 C11.4240004,13.3207373 11.4240004,13.9195469 11.0561632,14.2887245 L3.70293913,21.6678605 L6.72835611,21.6678605 L6.72835611,22.9926605 L2.50086828,22.9926605 C2.07583151,22.9926605 1.69127444,22.8186701 1.41231656,22.5386957 C1.13335868,22.2587213 0.960879993,21.8736461 0.96,21.4479437 L0.960879993,17.2041677 L2.28086995,17.2041677 L2.27998996,20.4207821 L9.72297333,12.9506765 Z" id="maximize"></path>)
}

export const OverflowIcon = () => {
    return (<path d="M4.24,10.56 C5.296,10.56 6.16,11.424 6.16,12.48 C6.16,13.536 5.296,14.4 4.24,14.4 C3.184,14.4 2.32,13.536 2.32,12.48 C2.32,11.424 3.184,10.56 4.24,10.56 Z M19.76,10.56 C20.816,10.56 21.68,11.424 21.68,12.48 C21.68,13.536 20.816,14.4 19.76,14.4 C18.704,14.4 17.84,13.536 17.84,12.48 C17.84,11.424 18.704,10.56 19.76,10.56 Z M12,10.56 C13.056,10.56 13.92,11.424 13.92,12.48 C13.92,13.536 13.056,14.4 12,14.4 C10.944,14.4 10.08,13.536 10.08,12.48 C10.08,11.424 10.944,10.56 12,10.56 Z" id="overflow"></path>)
}
export const DownCarrot = () => {
    return (<path d="M11.9995584,14.1943104 C11.6038848,14.1943104 11.2082112,14.0441664 10.9079232,13.7438784 L7.9068096,10.7427648 L8.8438848,9.8056896 L11.843232,12.8068032 C11.9297856,12.8924736 12.0693312,12.8915904 12.1576512,12.80592 L15.1561152,9.8056896 L16.0931904,10.7427648 L13.09296,13.7429952 C12.7909056,14.0441664 12.395232,14.1943104 11.9995584,14.1943104" id="downCarrot"></path>)
} 
export const UpCarrot = () => {
    return (<path d="M12.0004416,9.8056896 C12.3961152,9.8056896 12.7917888,9.9558336 13.0920768,10.2561216 L16.0931904,13.2572352 L15.1561152,14.1943104 L12.156768,11.1931968 C12.0702144,11.1075264 11.9306688,11.1084096 11.8423488,11.19408 L8.8438848,14.1943104 L7.9068096,13.2572352 L10.90704,10.2570048 C11.2090944,9.9558336 11.604768,9.8056896 12.0004416,9.8056896" id="upCarrot"></path>)
}
export const RightCarrot = () => {
    return (<path d="M14.1943104,12.0004416 C14.1943104,12.3961152 14.0441664,12.7917888 13.7438784,13.0920768 L10.7427648,16.0931904 L9.8056896,15.1561152 L12.8068032,12.156768 C12.8924736,12.0702144 12.8915904,11.9306688 12.80592,11.8423488 L9.8056896,8.8438848 L10.7427648,7.9068096 L13.7429952,10.90704 C14.0441664,11.2090944 14.1943104,11.604768 14.1943104,12.0004416" id="rightCarrot"></path>)
} 
export const LeftCarrot = () => {
    return (<path d="M9.8056896,11.9995584 C9.8056896,11.6038848 9.9558336,11.2082112 10.2561216,10.9079232 L13.2572352,7.9068096 L14.1943104,8.8438848 L11.1931968,11.843232 C11.1075264,11.9297856 11.1084096,12.0693312 11.19408,12.1576512 L14.1943104,15.1561152 L13.2572352,16.0931904 L10.2570048,13.09296 C9.9558336,12.7909056 9.8056896,12.395232 9.8056896,11.9995584" id="leftCarrot"></path>)
}
export const Search = () =>{
    return (<path d="M2.31297137,10.0961741 C2.31297137,5.8149504 5.75046722,2.33125632 9.97471605,2.33125632 C14.1990532,2.33125632 17.6355775,5.8149504 17.6355775,10.0961741 C17.6355775,14.3773094 14.1990532,17.8601203 9.97471605,17.8601203 C5.7503789,17.8601203 2.31297137,14.3773094 2.31297137,10.0961741 M22.8419428,21.8701133 L16.9386458,15.8873165 C18.2184,14.3101862 18.9876657,12.2926925 18.9876657,10.0961741 C18.9876657,5.05857792 14.9443842,0.96 9.97471605,0.96 C5.00407639,0.96 0.96,5.05857792 0.96,10.0961741 C0.96,15.1327987 5.00416471,19.2313766 9.97471605,19.2313766 C12.291345,19.2313766 14.3995392,18.3336038 15.998128,16.8728794 L21.8854391,22.8395136 C22.0170356,22.9728768 22.1901425,23.04 22.3641326,23.04 C22.5372394,23.04 22.7094631,22.9728768 22.8419428,22.8395136 C23.1060191,22.571904 23.1060191,22.1386061 22.8419428,21.8701133" id="search"></path>)
}
export const LeftArrow = ()=> {
    return(<path d="M4.18378718,12.6239808 L7.63091678,16.0711104 L8.56799198,15.1349184 L6.09591518,12.6619584 L19.15756,12.6619584 C19.6636336,12.6619584 20.0752048,12.3652032 20.0752048,11.9995584 C20.0752048,11.6339136 19.6636336,11.3371584 19.15756,11.3371584 L6.09503198,11.3371584 L8.56799198,8.8650816 L7.63091678,7.9288896 L4.18378718,11.375136 C4.01797439,11.5406339 3.92479522,11.7652863 3.92479522,11.9995584 C3.92479522,12.2338305 4.01797439,12.4584829 4.18378718,12.6239808" id="leftArrow"></path>)
}
export const RightArrow = ()=> {
    return(<path d="M19.8157712,11.3760192 L16.3686416,7.9288896 L15.4315664,8.8650816 L17.9045264,11.3371584 L4.84199842,11.3371584 C4.33592482,11.3371584 3.92523682,11.6339136 3.92523682,11.9995584 C3.92523682,12.3652032 4.33592482,12.6619584 4.84199842,12.6619584 L17.9054096,12.6619584 L15.4315664,15.1349184 L16.3686416,16.0711104 L19.8157712,12.624864 C19.981584,12.4593661 20.0747632,12.2347137 20.0747632,12.0004416 C20.0747632,11.7661695 19.981584,11.5415171 19.8157712,11.3760192" id="rightArrow"></path>)
}
export const Dots = () => {
    return(<path d="M4.24,10.56 C5.296,10.56 6.16,11.424 6.16,12.48 C6.16,13.536 5.296,14.4 4.24,14.4 C3.184,14.4 2.32,13.536 2.32,12.48 C2.32,11.424 3.184,10.56 4.24,10.56 Z M19.76,10.56 C20.816,10.56 21.68,11.424 21.68,12.48 C21.68,13.536 20.816,14.4 19.76,14.4 C18.704,14.4 17.84,13.536 17.84,12.48 C17.84,11.424 18.704,10.56 19.76,10.56 Z M12,10.56 C13.056,10.56 13.92,11.424 13.92,12.48 C13.92,13.536 13.056,14.4 12,14.4 C10.944,14.4 10.08,13.536 10.08,12.48 C10.08,11.424 10.944,10.56 12,10.56 Z" id="ellipsis"></path>)
}
export const Export = () => {
    return(<path d="M11.9997792,16.5869013 C11.8142948,16.5873537 11.6363567,16.5134938 11.5057171,16.3818202 L6.69404352,11.5701466 L7.68216768,10.5821107 L11.2997549,14.1988147 L11.2997549,2.96292096 L12.6978605,2.96292096 L12.6978605,14.2006694 L16.3173907,10.582199 L17.3054266,11.5701466 L12.493753,16.3818202 C12.3631349,16.513472 12.185233,16.5873301 11.9997792,16.5869013 L11.9997792,16.5869013 Z M21.6414086,9.8617728 L23.0396026,9.8617728 L23.0396026,19.4095181 C23.0396026,20.3072026 22.3097261,21.037079 21.4121299,21.037079 L2.58787008,21.037079 C1.69027392,21.037079 0.96039744,20.3072026 0.96039744,19.4104896 L0.96039744,9.8617728 L2.35859136,9.8617728 L2.35859136,19.4104896 C2.35859136,19.5363456 2.46104256,19.6388851 2.58787008,19.6388851 L21.4122182,19.6388851 C21.4730564,19.6389321 21.531415,19.6147789 21.5744259,19.5717515 C21.6174367,19.5287242 21.6415673,19.4703562 21.641497,19.4095181 L21.641497,9.8617728 L21.6414086,9.8617728 Z" id="export"></path>)
}
export const Minus = () =>{
    return(<path d="M11.0854464,12.9145536 L1.8754368,12.9145536 C1.3693632,12.9145536 0.9604416,12.5047488 0.9604416,12.0004416 C0.9604416,11.4952512 1.3693632,11.0854464 1.8754368,11.0854464 L22.1245632,11.0854464 C22.6297536,11.0854464 23.0395584,11.4952512 23.0395584,12.0004416 C23.0395584,12.5047488 22.6297536,12.9145536 22.1245632,12.9145536 L11.0854464,12.9145536 Z" id="minus"></path>)
}
export const Check = () =>{
    return(<path d="M16.2680672,8.11358558 L10.3682912,14.0133616 L7.73193922,11.3752432 C7.38660802,11.0307952 6.82842562,11.0307952 6.48309442,11.3752432 C6.13776322,11.7196912 6.13776322,12.27964 6.48309442,12.624088 L9.74386882,15.8866288 C9.90991042,16.0517872 10.1351264,16.1454064 10.3682912,16.1454064 C10.6032224,16.1454064 10.8275552,16.0517872 10.9927136,15.8866288 L17.516912,9.36243038 C17.6827248,9.1969325 17.775904,8.97228011 17.775904,8.73800798 C17.775904,8.50373585 17.6827248,8.27908346 17.516912,8.11358558 C17.3514141,7.94777279 17.1267617,7.85459362 16.8924896,7.85459362 C16.6582175,7.85459362 16.4335651,7.94777279 16.2680672,8.11358558" id="check"></path>)
}
export const Empty = () => {
    return ('')
}
export const Info = () => { 
    return (<path d="M12.0004416,1.0156416 C18.056544,1.0156416 22.9848,5.9430144 22.9848,12 C22.9848,18.0569856 18.056544,22.9843584 12.0004416,22.9843584 C5.943456,22.9843584 1.0152,18.0569856 1.0152,12 C1.0152,5.9430144 5.943456,1.0156416 12.0004416,1.0156416 Z M12.0004416,21.6595584 C17.3261376,21.6595584 21.66,17.3265792 21.66,12 C21.66,6.6734208 17.3261376,2.3404416 12.0004416,2.3404416 C6.6738624,2.3404416 2.34,6.6734208 2.34,12 C2.34,17.3265792 6.6738624,21.6595584 12.0004416,21.6595584 Z M14.534519,15.8609088 C14.9001638,15.8609088 15.196919,16.1567808 15.196919,16.5233088 C15.196919,16.8889536 14.9001638,17.1857088 14.534519,17.1857088 L9.46583424,17.1857088 C9.10018944,17.1857088 8.80343424,16.8889536 8.80343424,16.5233088 C8.80343424,16.1567808 9.10018944,15.8609088 9.46583424,15.8609088 L11.337335,15.8609088 L11.337335,10.2879168 L10.1282342,10.2879168 C9.76258944,10.2879168 9.46583424,9.9911616 9.46583424,9.6255168 C9.46583424,9.259872 9.76258944,8.9631168 10.1282342,8.9631168 L12.6630182,8.9631168 L12.6630182,15.8609088 L14.534519,15.8609088 Z M11.3251469,7.2324864 C10.9413061,7.23238889 10.630166,6.9212488 10.6300685,6.537408 L10.6300685,5.8953216 C10.6300685,5.5111296 10.9409549,5.2002432 11.3251469,5.2002432 L11.9672333,5.2002432 C12.3514253,5.2002432 12.6631949,5.5111296 12.6631949,5.8953216 L12.6631949,6.537408 C12.6631949,6.9207168 12.3514253,7.2324864 11.9672333,7.2324864 L11.3251469,7.2324864 Z" id="info"></path>)
}

export const TrashIcon = () => {
    return (<path d="M21.7730496,4.5484416 C22.1559552,4.54844161 22.4663616,4.85884796 22.4663616,5.2417536 C22.4663616,5.62465924 22.1559552,5.93506559 21.7730496,5.9350656 L20.017248,5.9350656 C20.0287296,6.0092544 20.0402112,6.0834432 20.0402112,6.1611648 L20.0402112,21.4272768 C20.0402112,22.3166592 19.3168704,23.04 18.427488,23.04 L5.57251201,23.04 C4.68401281,23.04 3.95978881,22.3166592 3.95978881,21.4272768 L3.95978881,6.1611648 C3.95978881,6.0834432 3.97215361,6.0092544 3.98275201,5.9350656 L2.22695041,5.9350656 C1.84452481,5.9350656 1.53363841,5.6241792 1.53363841,5.2417536 C1.53363841,4.859328 1.84452481,4.5484416 2.22695041,4.5484416 L8.09669761,4.5484416 L8.09669761,2.5727232 C8.09669761,1.6833408 8.82003841,0.96 9.70942081,0.96 L14.2914624,0.96 C15.1790784,0.96 15.9033024,1.6833408 15.9033024,2.5727232 L15.9033024,4.5484416 L21.7730496,4.5484416 Z M18.6544704,6.1611648 C18.6544704,6.10104623 18.6305286,6.04340276 18.5879355,6.00097545 C18.5453425,5.95854815 18.4876061,5.93483076 18.427488,5.93506387 L5.57251201,5.93506387 C5.44798081,5.93506387 5.34641281,6.0357504 5.34641281,6.1611648 L5.34641281,21.4272768 C5.34641281,21.551808 5.44798081,21.6542592 5.57251201,21.6542592 L18.427488,21.6542592 C18.5529024,21.6542592 18.6544704,21.551808 18.6544704,21.4272768 L18.6544704,6.1611648 Z M9.48331988,2.5727232 L9.48331988,4.5484416 L14.5175616,4.5484416 L14.5175616,2.5727232 C14.5175616,2.4473088 14.4151104,2.3457408 14.2914624,2.3457408 L9.70942081,2.3457408 C9.64930224,2.3457408 9.59165877,2.36968264 9.54923146,2.41227568 C9.50680416,2.45486871 9.48308677,2.51260508 9.48331988,2.5727232 L9.48331988,2.5727232 Z M8.22211201,18.566857 C7.83968641,18.566857 7.52880001,18.2568538 7.52880001,17.8744282 L7.52880001,9.20317056 C7.52880001,8.82074496 7.83968641,8.51074176 8.22211201,8.51074176 C8.60453761,8.51074176 8.91454081,8.82074496 8.91454081,9.20317056 L8.91454081,17.8744282 C8.91454081,18.256846 8.60452988,18.566857 8.22211201,18.566857 Z M12.000265,18.566857 C11.6178394,18.566857 11.306953,18.2568538 11.306953,17.8744282 L11.306953,9.20317056 C11.306953,8.82074496 11.6178394,8.51074176 12.000265,8.51074176 C12.3826906,8.51074176 12.693577,8.82074496 12.693577,9.20317056 L12.693577,17.8744282 C12.693577,18.2568538 12.3826906,18.566857 12.000265,18.566857 Z M15.7788595,18.566857 C15.3964417,18.566857 15.0864307,18.256846 15.0864307,17.8744282 L15.0864307,9.20317056 C15.0864307,8.82074496 15.3964339,8.51074176 15.7788595,8.51074176 C16.1621683,8.51074176 16.4712883,8.82074496 16.4712883,9.20317056 L16.4712883,17.8744282 C16.4712883,18.2568538 16.1621683,18.566857 15.7788595,18.566857 Z" id="trashIcon"></path>)
}

export const Draw = (hover) => {
    let stroke, fill;
    if (!hover) {
        stroke = "#000000"
        fill = "#000000"
    }
    else {
        stroke = "#1f40e6"
        fill = "#1f40e6"
    }
    return (
    <g id="Symbols" strokeWidth="1" stroke={stroke} fill="none" fillRule="evenodd">
    <g id="toolbar-redraw" transform="translate(-44.000000, -175.000000)">
        <g id="Group-8" transform="translate(44.000000, 175.000000)">
            <path fill="#ffffff" d="M3.22217717,3.6288085 C0.184990206,6.73602402 0.648785724,11.636457 3.30217175,14.4105126 C6.34634373,17.5931261 11.4639495,17.5212758 14.1154353,14.9772117 C14.6031695,14.5092375 15.0173082,14.0465361 15.3687402,13.561263 C15.4298158,13.4769271 15.4813491,13.4017331 15.5420224,13.318967 C15.6197373,13.2129542 15.7057745,13.0994595 15.7747829,12.9912014 C15.8995679,12.7954429 16.0030713,12.5917832 16.1032332,12.3899007 C16.9799077,10.6229079 17.0779814,8.75559374 16.6732482,7.11148923 C15.6329353,2.88553738 11.0376785,-0.195625422 6.23459346,1.62568437" id="DrawButtonPath2" strokeLinecap="round" transform="translate(9.012709, 8.968248) rotate(-3.000000) translate(-9.012709, -8.968248) "></path>
            <path fill={fill} d="M6.63634892,14 L6.61771277,13.9995455 C6.43149206,13.9919181 6.26879742,13.8713825 6.20726282,13.6954553 L3.02548026,4.60456988 C2.9678711,4.43979113 3.00971354,4.25657759 3.13314446,4.13314561 C3.25657538,4.00971362 3.43978735,3.96787083 3.60456468,4.02548048 L12.695372,7.20729038 C12.8713861,7.26878401 12.9919978,7.43153101 12.9996179,7.6178235 C13.007238,7.80411598 12.9003209,7.97616994 12.7299171,8.05183364 L8.79905198,9.79910183 L7.05179882,13.7300007 C6.97885072,13.8942024 6.81602404,14 6.63634892,14 Z" id="drawButtonPath1" fillRule="nonzero"></path>
        </g>
    </g>
    </g>)
}


export const BarGraph = (selected, hover) =>{
    let stroke, fill;
    
    if (selected) {
        stroke = "#ffffff"
        fill = "#1f40e6"
    }
    else {
        if (!hover) {
            stroke = "#000000"
            fill = "#FFFFFF"
        }
        else {
            stroke = "#1f40e6"
            fill = "#FFFFFF"
        }
    }
    return (
        <React.Fragment>
            <g id="02_Explore" fillRule="evenodd" >
                <path stroke={fill} fill={stroke} d="M0.96,3.2920896 L2.2848,3.2920896 L2.2848,19.3839936 L23.04,19.3839936 L23.04,20.7079104 L0.96,20.7079104 L0.96,3.2920896 Z M5.9889408,18.0468288 L5.9889408,12.2830656 L8.6385408,12.2830656 L8.6385408,18.0468288 L5.9889408,18.0468288 L5.9889408,18.0468288 Z M11.38176,18.0468288 L11.38176,6.1351104 L14.03136,6.1351104 L14.03136,18.0468288 L11.38176,18.0468288 Z M16.7728128,18.047712 L16.7728128,9.2095296 L19.4224128,9.2095296 L19.4224128,18.047712 L16.7728128,18.047712 Z" id="bar-chart"></path>
            </g>
            
        </React.Fragment>)
}

export const TreeMap = (selected, hover) =>{
    let stroke, fill;

    if (selected) {
        stroke = "#ffffff"
        fill = "#1f40e6"
    }
    else {
        if (!hover) {
            stroke = "#000000"
            fill = "#FFFFFF"
        }
        else {
            stroke = "#1f40e6"
            fill = "#FFFFFF"
        }
    }
    return (
        <React.Fragment>
            <g id="02_Explore" fillRule="evenodd" >
                <path stroke={fill} fill={stroke} d="M9.793 3.581c.853 0 1.546.694 1.546 1.549v4.58c0 .855-.693 1.549-1.546 1.549H2.504A1.548 1.548 0 0 1 .96 9.711V5.13c0-.855.693-1.549 1.544-1.549h7.29zm.223 6.13V5.13c0-.124-.1-.224-.223-.224H2.504c-.122 0-.222.1-.222.224v4.58c0 .124.1.224.222.224h7.29c.123 0 .222-.1.222-.223zm11.479-6.13c.852 0 1.545.694 1.545 1.549v4.58c0 .855-.693 1.549-1.545 1.549h-7.29a1.548 1.548 0 0 1-1.544-1.548V5.13c0-.855.693-1.549 1.545-1.549h7.289zm.223 6.13V5.13c0-.124-.1-.224-.223-.224h-7.29c-.122 0-.221.1-.221.224v4.58c0 .124.1.224.222.224h7.289c.123 0 .223-.1.223-.223zM9.793 12.74c.853 0 1.546.694 1.546 1.548v4.582c0 .854-.693 1.548-1.546 1.548H2.504A1.547 1.547 0 0 1 .96 18.87V14.29c0-.854.693-1.548 1.544-1.548h7.29zm.223 6.13V14.29c0-.123-.1-.223-.223-.223H2.504c-.122 0-.222.1-.222.223v4.582c0 .123.1.223.222.223h7.29c.123 0 .222-.1.222-.223zm11.479-6.13c.852 0 1.545.694 1.545 1.548v4.582c0 .854-.693 1.548-1.545 1.548h-7.29a1.547 1.547 0 0 1-1.544-1.548V14.29c0-.854.693-1.548 1.545-1.548h7.289zm.223 6.13V14.29c0-.123-.1-.223-.223-.223h-7.29c-.122 0-.221.1-.221.223v4.582c0 .123.1.223.222.223h7.289c.123 0 .223-.1.223-.223z" id="a"></path>
            </g>
        </React.Fragment>)
}
export const OneMap = (selected, hover) => {
    let stroke, fill;
    if (selected) {
        stroke = "#ffffff"
        fill = "#1f40e6"
    }
    else {
        if (!hover) {
            stroke = "#000000"
            fill = "#FFFFFF"
        }
        else {
            stroke = "#1f40e6"
            fill = "#FFFFFF"
        }
    }

    return (
        <g id="02_Explore" stroke={stroke} strokeWidth="1" fillRule="evenodd">
            <g id="01-Explore-Settings" transform="translate(-1147.000000, -109.000000)">
                <g id="Group-10" transform="translate(1133.000000, 94.000000)">
                    <rect id="Rectangle" fill={fill} x="14.5" y="15.5"  width="15" height="15"></rect>
                </g>
            </g>
        </g>)
}

export const TwoMap = (selected, hover) => {

    let stroke, fill;
    if (selected) {
        stroke = "#ffffff"
        fill = "#1f40e6"
    }
    else {
        if (!hover) {
            stroke = "#000000"
            fill = "#FFFFFF"
        }
        else {
            stroke = "#1f40e6"
            fill = "#FFFFFF"
        }
    }
    

    return (
        <React.Fragment>
            <g id="02_Explore" strokeWidth="1" stroke={stroke} fillRule="evenodd">
                <g id="01-Explore-Settings" transform="translate(-1190.000000, -109.000000)">
                    <g id="Group-10" transform="translate(1133.000000, 94.000000)">
                        <g id="Group-9" transform="translate(57.000000, 15.000000)">
                            <rect id="Rectangle" fill={fill} x="0.5" y="0.5" width="15" height="15"></rect>
                            <path d="M8,0.5 L8,15.4526028" stroke={stroke} id="Line" strokeLinecap="square"></path>
                        </g>
                    </g>
                </g>
            </g>
        </React.Fragment>)
}

export const ThreeMap = (selected, hover) => {
    let stroke, fill;
    if (selected) {
        stroke = "#ffffff"
        fill = "#1f40e6"
    }
    else {
        if (!hover) {
            stroke = "#000000"
            fill = "#FFFFFF"
        }
        else {
            stroke = "#1f40e6"
            fill = "#FFFFFF"
        }
    }

    return (
        <React.Fragment>
            <g id="02_Explore" strokeWidth="1" stroke={stroke} fillRule="evenodd">
                <g id="01-Explore-Settings" transform="translate(-1233.000000, -109.000000)">
                    <g id="Group-10" transform="translate(1133.000000, 94.000000)">
                        <g id="Group-6" transform="translate(100.000000, 15.000000)">
                            <rect id="Rectangle" fill={fill} x="0.5" y="0.5" width="16" height="15"></rect>
                            <path d="M6,0.5 L6,15.4526028" id="Line" stroke={stroke} fill="#000000" strokeLinecap="square"></path>
                            <path d="M11,0.5 L11,15.4526028" id="Line" stroke={stroke} fill="#000000" strokeLinecap="square"></path>
                        </g>
                    </g>
                </g>
            </g>
        </React.Fragment>)
}
